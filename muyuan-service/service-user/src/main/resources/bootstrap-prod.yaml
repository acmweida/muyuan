spring:
  cloud:
    nacos:
      config:
        server-addr: 192.168.1.131
        namespace: 36df0ae4-655b-42ad-a976-89f0fc20556c
        group: MUYUAN
        file-extension: yaml
      discovery:
        server-addr: 192.168.1.131
        group: MUYUAN
        namespace: 36df0ae4-655b-42ad-a976-89f0fc20556c

  shardingsphere:
    datasource:
      ds-master:
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.1.131:3306/user?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
        password: '82@Jeom+p_'
        type: com.zaxxer.hikari.HikariDataSource
        username: user
      ds-slave-0:
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.1.132:3306/user?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
        password: '82@Jeom+p_'
        type: com.zaxxer.hikari.HikariDataSource
        username: user
      ds-slave-1:
        driver-class-name: com.mysql.jdbc.Driver
        jdbc-url: jdbc:mysql://192.168.1.133:3306/user?serverTimezone=UTC&useSSL=false&useUnicode=true&characterEncoding=UTF-8&autoReconnect=true&failOverReadOnly=false
        password: '82@Jeom+p_'
        type: com.zaxxer.hikari.HikariDataSource
        username: user

      names: ds-master,ds-slave-0,ds-slave-1
#    sharding:
#      binding-tables: t_order,t_order_item
#      broadcast-tables: t_address
#      default-database-strategy:
#        inline:
#          algorithm-expression: ds_$->{user_id % 2}
#          sharding-column: user_id
#      master-slave-rules:
#        ds_0:
#          master-data-source-name: ds_master_0
#          slave-data-source-names: ds_master_0_slave_0, ds_master_0_slave_1
#        ds_1:
#          master-data-source-name: ds_master_1
#          slave-data-source-names: ds_master_1_slave_0, ds_master_1_slave_1
#      tables:
#        t_order:
#          actual-data-nodes: ds_$->{0..1}.t_order_$->{0..1}
#          key-generator:
#            column: order_id
#            props:
#              worker:
#                id: 123
#            type: SNOWFLAKE
#          table-strategy:
#            inline:
#              algorithm-expression: t_order_$->{order_id % 2}
#              sharding-column: order_id
#        t_order_item:
#          actual-data-nodes: ds_$->{0..1}.t_order_item_$->{0..1}
#          key-generator:
#            column: order_item_id
#            props:
#              worker:
#                id: 123
#            type: SNOWFLAKE
#          table-strategy:
#            inline:
#              algorithm-expression: t_order_item_$->{order_id % 2}
#              sharding-column: order_id