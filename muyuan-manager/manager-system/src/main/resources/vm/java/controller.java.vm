package ${packageName}.${moduleName}.facade.controller;

import java.util.List;

import com.muyuan.common.bean.Page;
import com.muyuan.common.log.annotion.Log;
import com.muyuan.common.log.enums.BusinessType;
import com.muyuan.common.web.annotations.RequirePermissions;
import lombok.AllArgsConstructor;
import org.springframework.web.bind.annotation.*;
import ${packageName}.${moduleName}.model.${ClassName};
import ${packageName}.${moduleName}.service.${ClassName}Service;

/**
 * ${functionName}Controller
 * 
 * @author ${author}
 * @date ${datetime}
 */
@RestController
@RequestMapping("/${businessName}")
@AllArgsConstructor
public class ${ClassName}Controller {

    private ${ClassName}Service ${className}Service;

    /**
     * 查询${functionName}列表
     */
    @RequirePermissions("${permissionPrefix}:query")
    @GetMapping("/list")
#if($table.crud || $table.sub)
    public esult<Page<${ClassName}DTO>> list(@ModelAttribute ${ClassName}QueryParams params)
    {
        Page<${ClassName}DTO> list = ${className}Service.list(params);
        return ResultUtil.success(list);
    }
#elseif($table.tree)
    public Result list(${ClassName} ${className})
    {
        List<${ClassName}> list = ${className}DomainService.select${ClassName}List(${className});
        return ResultUtil.success(list);
    }
#end



    /**
     * 获取${functionName}详细信息
     */
    @RequirePermissions("${permissionPrefix}:query")
    @GetMapping(value = "/{${pkColumn.javaField}}")
    public Result get(@PathVariable("${pkColumn.javaField}") ${pkColumn.javaType} ${pkColumn.javaField})
    {
        return ResultUtil.success(${className}DomainService.select${ClassName}By${pkColumn.capJavaField}(${pkColumn.javaField}));
    }

    /**
     * 新增${functionName}
     */
    @RequirePermissions("${permissionPrefix}:add")
    @Log(title = "${functionName}", businessType = BusinessType.INSERT)
    @PostMapping
    public Result add(@RequestBody ${ClassName} ${className})
    {
        return ResultUtil.success(${className}DomainService.insert${ClassName}(${className}));
    }

    /**
     * 修改${functionName}
     */
    @RequirePermissions("${permissionPrefix}:edit")
    @Log(title = "${functionName}", businessType = BusinessType.UPDATE)
    @PutMapping
    public Result edit(@RequestBody ${ClassName} ${className})
    {
        return ResultUtil.success(${className}DomainService.update${ClassName}(${className}));
    }

    /**
     * 删除${functionName}
     */
    @RequirePermissions("${permissionPrefix}:remove")
    @Log(title = "${functionName}", businessType = BusinessType.DELETE)
	@DeleteMapping("/{${pkColumn.javaField}s}")
    public Result remove(@PathVariable ${pkColumn.javaType}[] ${pkColumn.javaField}s)
    {
        return ResultUtil.success(${className}DomainService.delete${ClassName}By${pkColumn.capJavaField}s(${pkColumn.javaField}s));
    }
}
